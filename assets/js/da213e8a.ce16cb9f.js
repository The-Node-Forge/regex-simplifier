"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5624],{5190:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"USAGE","title":"Usage","description":"Basic example and config.","source":"@site/docs/USAGE.md","sourceDirName":".","slug":"/USAGE","permalink":"/regex-simplifier/docs/USAGE","draft":false,"unlisted":false,"editUrl":"https://github.com/The-Node-Forge/regex-simplifier/tree/main/docs/docs/USAGE.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Usage","description":"Basic example and config.","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/regex-simplifier/docs/INSTALLATION"},"next":{"title":"API Reference","permalink":"/regex-simplifier/docs/API_REFERENCE"}}');var s=i(4848),t=i(8453);const o={title:"Usage",description:"Basic example and config.",sidebar_position:3},l="\ud83d\ude80 Usage",a={},c=[{value:"\ud83d\udce6 Basic Example",id:"-basic-example",level:2},{value:"\u2699\ufe0f Configuration",id:"\ufe0f-configuration",level:2},{value:"\ud83d\udd0d Explore More",id:"-explore-more",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-usage",children:"\ud83d\ude80 Usage"})}),"\n",(0,s.jsxs)(n.p,{children:["Here\u2019s how to use ",(0,s.jsx)(n.strong,{children:"regex-simplifier"})," to build, test, and explain regular\nexpressions with ease."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-basic-example",children:"\ud83d\udce6 Basic Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { build, test, explain } from '@the-node-forge/regex-simplifier';\n\n// Build a regex from a common name\nconst emailRegex = build('email');\nemailRegex.test('me@example.com'); // true\n\n// Test directly with a named pattern\nconsole.log(test('12345', 'zip')); // true\n\n// Explain a raw regex\nconsole.log(explain(/^\\d{5}$/));\n// => This pattern includes:\n//    - Starts with\n//    - exactly five digits\n//    - Ends with\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-configuration",children:"\u2699\ufe0f Configuration"}),"\n",(0,s.jsx)(n.p,{children:"No configuration is required."}),"\n",(0,s.jsx)(n.p,{children:"All methods work seamlessly in JavaScript and TypeScript projects, both in the\nbrowser and Node.js environments."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-explore-more",children:"\ud83d\udd0d Explore More"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For full API details, check out the ",(0,s.jsx)(n.a,{href:"/regex-simplifier/docs/API_REFERENCE",children:"API Reference"})]}),"\n",(0,s.jsxs)(n.li,{children:["To view all supported patterns, see the\n",(0,s.jsx)(n.a,{href:"https://github.com/The-Node-Forge/regex-simplifier#-built-in-patterns",children:"README"})]}),"\n",(0,s.jsxs)(n.li,{children:["For installation steps, visit the ",(0,s.jsx)(n.a,{href:"/regex-simplifier/docs/INSTALLATION",children:"Installation Guide"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);